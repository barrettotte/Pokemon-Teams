# Testing CRUD functionality for Pokemon-Teams API

@base=http://127.0.0.1:8020/api/v1


### All Pokedex entries
GET {{base}}/pokedex/ HTTP/1.1
Content-Type: application/json


### Get sprites for pokedex entry
GET {{base}}/pokedex/647/sprites HTTP/1.1
Content-Type: application/json


### All teams
GET {{base}}/teams HTTP/1.1
Content-Type: application/json


### Get a team
GET {{base}}/teams/1 HTTP/1.1
Content-Type: application/json


### Get a team that doesn't exist (return 404)
GET {{base}}/teams/900 HTTP/1.1
Content-Type: application/json


### Create a team with members [scyther]
POST {{base}}/teams HTTP/1.1
Content-Type: application/json

{
  "label": "TEST CREATE",
  "members": [
    {
      "dex_id": 764,
      "sprite_id": 1036,
      "gender": "M",
      "level": 50,
      "nickname": "CREATED",
      "slot": 1,
      "shiny": false
    }
  ]
}


### Update a team
PUT {{base}}/teams/26 HTTP/1.1
Content-Type: application/json

{
  "label": "UPDATED",
}


### Try to update a team that doesn't exist
PUT {{base}}/teams/999 HTTP/1.1
Content-Type: application/json

{
  "label": "I DON'T EXIST",
}


### Delete a team
DELETE {{base}}/teams/15 HTTP/1.1
Content-Type: application/json


### Get member of a team
GET {{base}}/teams/26/members/4 HTTP/1.1
Content-Type: application/json


### Get member that doesn't exist (404
GET {{base}}/teams/26/members/999 HTTP/1.1
Content-Type: application/json


## Create new member on team
POST {{base}}/teams/26/members/ HTTP/1.1
Content-Type: application/json

{
  "dex_id": 766,
  "sprite_id": 1037,
  "slot": 1,
  "gender": "",
  "level": 100,
  "nickname": "POST REQ",
  "shiny": false
}


### Update member
PUT {{base}}/teams/26/members/4 HTTP/1.1
Content-Type: application/json

{
  "dex_id": 765,
  "sprite_id": 1037,
  "slot": 2,
  "gender": "F",
  "level": 55,
  "nickname": "UPDATED",
  "shiny": true
}


### Delete member
DELETE {{base}}/teams/26/members/8 HTTP/1.1
Content-Type: application/json


### get a random team
GET {{base}}/teams/random HTTP/1.1
Content-Type: application/json
